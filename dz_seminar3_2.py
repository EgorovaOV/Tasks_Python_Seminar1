#В большой текстовой строке подсчитать
# количество встречаемых слов
# и вернуть 10 самых частых.
# Не учитывать знаки препинания и регистр символов.
# За основу возьмите любую статью из википедии или из документации к языку.
text = 'Под синтаксическим сахаром понимается любой ' \
       'имеющийся в языке программирования синтаксический элемент,' \
       ' механизм, способ описания, который дублирует другой, имеющийся в ' \
       'языке элемент или механизм, но является более удобным в использовании, ' \
       'или более краток, или выглядит естественнее, или более привычен ' \
       '(похож на аналогичные элементы других языков), или просто лучше ' \
       'воспринимается при чтении программы человеком. ' \
       'Принципиально то, что синтаксический сахар, теоретически,' \
       ' всегда можно удалить из языка без потери его возможностей —' \
       ' всё, что можно написать с применением синтаксического сахара,' \
       ' может быть написано на этом же языке и без него. ' \
       'Таким образом, синтаксический сахар предназначен лишь для того,' \
       ' чтобы сделать более удобным для программиста написание программы. '
print(text)
text = text.replace(',' , '')#удаляем запятые
text = text.replace('.' , '')#удаляем точки
text = text.replace('—' , '')#удаляем тире
print(text)#такой текст из только слов

text_1 = text.split()#делим его на слова
print(text_1)

i = 0#считаем, сколько раз встречается каждое слово
find_max = []
while i < len(text_1):
    j = text_1.count(text_1[i])
    find_max.append(j)
    i += 1

print(find_max)# список с частотой включения каждого слова в текст

MAX = max(find_max)#максимально часто встречается слово
MIN = max(find_max)-2#до этого количества включения в список будем искать! а не 10

k = 0
while k < len(find_max):#до тех пор, пока мы в пределах списка с частотой включения каждого слова в текст
       if MIN <= find_max[k] <= MAX:#первые три наиболее часто встречающихся слова
          if text_1[k]  in text_1[0 : k-1]:# если мы уже видели такое слово до этого. ничего не делаем
              pass
          else:
              print(f'слово "{text_1[k]}" встречается {find_max[k]} раз')#если слово встретилосб первый раз
       else:
              pass#если слово встречается менее 3 раз ничего не делаем
       k += 1




